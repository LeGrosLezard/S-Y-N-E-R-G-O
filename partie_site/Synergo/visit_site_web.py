import cv2
import numpy as np

POSITION_RIGHT = [[(258, 221)], [(285, 181)], [(284, 183)], [], [(279, 190)], [(274, 192)], [(269, 194)], [(266, 197)], [(264, 199)], [(264, 201)], [(266, 204)], [(267, 205)], [(269, 207)], [(270, 207)], [(271, 209)], [(272, 211)], [(274, 213)], [(274, 215)], [(275, 218)], [(276, 222)], [(276, 225)], [], [(277, 231)], [(276, 229)], [(277, 228)], [(277, 227)], [(277, 227)], [(277, 228)], [(276, 228)], [(276, 227)], [(274, 227)], [(272, 225)], [(272, 226)], [(275, 227)], [(276, 228)], [(276, 228)], [(277, 229)], [(277, 228)], [(278, 228)], [(278, 228)], [(282, 226)], [(283, 225)], [(283, 224)], [(283, 225)], [(284, 224)], [(284, 224)], [(284, 224)], [(284, 224)], [(284, 225)], [(282, 225)], [(281, 226)], [(281, 226)], [(282, 226)], [(281, 227)], [(281, 226)], [(282, 227)], [(286, 226)], [(289, 226)], [(290, 227)], [(290, 227)], [(291, 227)], [(290, 227)], [(284, 227)], [(285, 227)], [(284, 227)], [(284, 227)], [(283, 227)], [(280, 226)], [(277, 225)], [(277, 224)], [(276, 224)], [(276, 224)], [(276, 224)], [(277, 225)], [(281, 227)], [(282, 227)], [(281, 227)], [(282, 227)], [(282, 228)], [(283, 233)], [], [], [(282, 234)], [], [(280, 232)], [(279, 228)], [(278, 227)], [(278, 226)], [(278, 227)], [(278, 227)], [(278, 227)], [(278, 226)], [(279, 229)], [], [(278, 230)], [(278, 229)], [(277, 229)], [(278, 229)], [(278, 230)], [(278, 229)], [(277, 227)], [(276, 227)], [(276, 226)], [(276, 226)], [(276, 227)], [(278, 229)], [(278, 230)], [(279, 231)], [(279, 230)], [(279, 230)], [(279, 231)], [], [(279, 230)], [(278, 227)], [(277, 225)], [(277, 225)], [(277, 225)], [(279, 224)], [(281, 221)], [(281, 219)], [(280, 219)], [(281, 219)], [(279, 221)], [(277, 223)], [(276, 223)], [(276, 224)], [(278, 223)], [(281, 221)], [(282, 220)], [(282, 220)], [(282, 220)], [(281, 220)], [(278, 224)], [(278, 225)], [(278, 225)], [(282, 223)], [(283, 222)], [(284, 222)], [(284, 223)], [(284, 223)], [(284, 222)], [(284, 223)], [(280, 226)], [(280, 225)], [(280, 226)], [(281, 225)], [(282, 223)], [(283, 222)], [(283, 222)], [(282, 225)], [(282, 227)], [(285, 228)], [(287, 228)], [(286, 229)], [(287, 228)], [(288, 225)], [(288, 224)], [(288, 224)], [(288, 224)], [(288, 224)], [(283, 226)], [(281, 226)], [(280, 226)], [(280, 226)], [(279, 228)], [(280, 232)], [(273, 227)], [(273, 224)], [(272, 223)], [(271, 219)], [(270, 217)], [(269, 216)], [(268, 216)], [(268, 216)], [(271, 218)], [(272, 219)], [(272, 220)], [(272, 220)], [(272, 220)], [], [], [], [], [], [], [], [], [], [], [(261, 202)], [], [], []]

POSITION_LEFT = [[(332, 219)], [(337, 186)], [(336, 189)], [], [], [(330, 194)], [(327, 196)], [(325, 197)], [(325, 199)], [(328, 201)], [(331, 204)], [(334, 205)], [(338, 207)], [(341, 207)], [(344, 209)], [(347, 211)], [(349, 213)], [(350, 215)], [(351, 218)], [(352, 220)], [(353, 223)], [], [(354, 229)], [(354, 227)], [(355, 226)], [(355, 226)], [(355, 226)], [(354, 227)], [(354, 226)], [(354, 226)], [(352, 226)], [(349, 225)], [(349, 225)], [(352, 227)], [(353, 227)], [(354, 227)], [(354, 228)], [(355, 228)], [(356, 228)], [(356, 227)], [(360, 226)], [(360, 225)], [(360, 224)], [(360, 224)], [(361, 224)], [(361, 223)], [(361, 223)], [(361, 223)], [(361, 224)], [(359, 225)], [(358, 226)], [(358, 226)], [(358, 226)], [(358, 227)], [(358, 227)], [(359, 227)], [(363, 226)], [(365, 226)], [(366, 226)], [(367, 226)], [(367, 226)], [(367, 226)], [(361, 227)], [(361, 227)], [(361, 227)], [(361, 227)], [(360, 228)], [(357, 227)], [(354, 226)], [(353, 226)], [(353, 225)], [(353, 225)], [(353, 226)], [(354, 226)], [(357, 228)], [(358, 228)], [(358, 228)], [(359, 228)], [(359, 230)], [(358, 234)], [], [(357, 236)], [], [], [(354, 234)], [(355, 229)], [(354, 228)], [(354, 228)], [(354, 228)], [(354, 228)], [(354, 228)], [(354, 228)], [(354, 231)], [(355, 233)], [(358, 232)], [(357, 233)], [(354, 231)], [(354, 231)], [(353, 231)], [(353, 230)], [(353, 229)], [(353, 229)], [(352, 228)], [(352, 228)], [(352, 229)], [(355, 233)], [(357, 235)], [(358, 235)], [(356, 235)], [(358, 234)], [(357, 235)], [(354, 233)], [], [(352, 228)], [(353, 227)], [(353, 227)], [(353, 227)], [(354, 226)], [(356, 223)], [(356, 221)], [(356, 221)], [(356, 221)], [(354, 222)], [(351, 225)], [(352, 225)], [(351, 225)], [(353, 225)], [(357, 222)], [(357, 221)], [(357, 221)], [(357, 222)], [(357, 222)], [(354, 225)], [(353, 226)], [(354, 227)], [(358, 224)], [(359, 223)], [(359, 224)], [(359, 224)], [(359, 224)], [(360, 224)], [(359, 224)], [(355, 228)], [(355, 228)], [(355, 228)], [(356, 228)], [(358, 224)], [(357, 224)], [(357, 224)], [(357, 227)], [(357, 229)], [(360, 230)], [(361, 230)], [(361, 230)], [(361, 229)], [(363, 227)], [(363, 225)], [(363, 225)], [(363, 225)], [(363, 226)], [(358, 227)], [(356, 228)], [(355, 228)], [(355, 228)], [], [(360, 235)], [(348, 229)], [(348, 226)], [(347, 225)], [(345, 220)], [(343, 218)], [(342, 218)], [(341, 218)], [(341, 218)], [(344, 220)], [(345, 221)], [(345, 222)], [(345, 222)], [(346, 222)], [], [], [], [(341, 218)], [(340, 216)], [(336, 214)], [], [], [], [], [], [], [], []]

TIMMER = [0.06696152687072754, 2.0711309909820557, 2.118001937866211, 2.1804957389831543, 2.2273709774017334, 2.274240493774414, 2.3367364406585693, 2.3836095333099365, 2.4304797649383545, 2.4929747581481934, 2.539849281311035, 2.602344036102295, 2.649233341217041, 2.6961004734039307, 2.7585837841033936, 2.8054563999176025, 2.8679490089416504, 2.914821147918701, 2.96169376373291, 3.024188995361328, 3.0710601806640625, 34.9784996509552, 35.47741150856018, 35.52428388595581, 35.58676481246948, 35.63365054130554, 35.696134090423584, 35.74302673339844, 35.80551886558533, 35.85978436470032, 35.912129402160645, 35.959003925323486, 36.02147698402405, 36.06835079193115, 36.115235805511475, 36.17773175239563, 36.22459077835083, 36.287084341049194, 36.33397960662842, 36.396454095840454, 36.44333839416504, 36.505842447280884, 36.56831741333008, 36.61520552635193, 36.677682638168335, 36.72457933425903, 36.78706884384155, 36.833924770355225, 36.90161919593811, 36.94635057449341, 37.008846282958984, 37.05574083328247, 37.11822819709778, 37.16510558128357, 37.2275812625885, 37.27447438240051, 37.32133960723877, 37.383822202682495, 37.44631767272949, 37.49321103096008, 37.55568552017212, 37.61819863319397, 37.66507077217102, 37.71193790435791, 37.774420738220215, 37.836933612823486, 37.89296555519104, 37.94793391227722, 37.996626138687134, 38.05914115905762, 38.10599422454834, 38.16850757598877, 38.21537470817566, 38.27787804603577, 38.34037113189697, 38.38724398612976, 38.449718713760376, 38.49659276008606, 38.55910611152649, 38.605974197387695, 38.66845631599426, 38.71534848213196, 38.76219987869263, 38.82469415664673, 38.88131833076477, 38.9342896938324, 38.987276554107666, 39.030383586883545, 39.09288024902344, 39.13977575302124, 39.20224738121033, 39.24912071228027, 39.29599094390869, 39.358487367630005, 39.42098259925842, 39.46785569190979, 39.51474070549011, 39.57722234725952, 39.62411332130432, 39.67096662521362, 39.73346424102783, 39.78033423423767, 39.84283137321472, 39.900028228759766, 39.95397996902466, 40.00795078277588, 40.06191802024841, 40.112318992614746, 40.15919351577759, 40.22166585922241, 40.26855826377869, 40.315412282943726, 40.37790560722351, 40.42477774620056, 40.48727321624756, 40.534146308898926, 40.596660137176514, 40.643531799316406, 40.7060272693634, 40.75288271903992, 40.81537580490112, 40.877715826034546, 40.93268060684204, 40.99264645576477, 41.047616720199585, 41.1035852432251, 41.14630842208862, 41.20881104469299, 41.25567698478699, 41.31817626953125, 41.3806529045105, 41.427525997161865, 41.49003982543945, 41.53690719604492, 41.59938955307007, 41.646260023117065, 41.70875668525696, 41.77127146720886, 41.81814217567444, 41.882803201675415, 41.93777251243591, 41.99673819541931, 42.051687717437744, 42.10667538642883, 42.161624908447266, 42.21196675300598, 42.2744619846344, 42.32133460044861, 42.38384771347046, 42.44632363319397, 42.49319672584534, 42.54006814956665, 42.60256338119507, 42.665077924728394, 42.71193242073059, 42.77442979812622, 42.82131886482239, 42.881269216537476, 42.928142786026, 42.99063754081726, 43.037511110305786, 43.10000729560852, 43.16252017021179, 43.20937371253967, 43.256258487701416, 43.318740367889404, 43.36562657356262, 43.428110122680664, 43.47498059272766, 43.53747534751892, 43.59997081756592, 43.64684510231018, 43.70935773849487, 43.7562255859375, 43.818705797195435, 43.88035297393799, 43.93042874336243, 43.97730112075806, 44.03979802131653, 44.086674451828, 44.13354182243347, 44.19603753089905, 44.24290919303894, 44.30542278289795, 44.352294921875, 44.3991482257843, 44.46164512634277, 44.50851583480835, 44.55540108680725, 44.617884159088135, 44.66477680206299, 44.71164536476135, 44.758512020111084]

POSITION_RIGHT = [i[0] for i in POSITION_RIGHT if i != []]
POSITION_LEFT  = [i[0] for i in POSITION_LEFT  if i != []]
POSITION = POSITION_RIGHT + POSITION_LEFT

OK  = [i[0] for i in POSITION]
OK1 = [i[1] for i in POSITION ]

c1 = min(OK)
c2 = max(OK)

c3 = min(OK1)
c4 = max(OK1)


print(c1, c2, c3, c4)


blanck = np.zeros((1000, 1000, 3), np.uint8)

hullConvexe = cv2.convexHull(np.array([POSITION]))
box = cv2.boundingRect(hullConvexe)

nb = 10
x, y, w, h = box

#cv2.rectangle(blanck, (x - nb, y - nb), (x + w + nb, y + h + nb), (0, 0, 255), 1)


for i, j in zip(POSITION_RIGHT, POSITION_LEFT):

    cv2.circle(blanck, i, 1, (0, 0, 255), 1)

    cv2.circle(blanck, j, 1, (0, 0, 255), 1)


web_site_eye = blanck[y - nb : y + h + nb, x - nb : x + w + nb]
web_site_eye = cv2.resize(web_site_eye, (500, 500))






cv2.imshow("web_site_eye", web_site_eye)
cv2.waitKey(0)
